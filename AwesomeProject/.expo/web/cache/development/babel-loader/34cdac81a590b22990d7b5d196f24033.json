{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\practice\\\\AwesomeProject\\\\App.js\";\nimport React, { Component } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input } from 'react-native-elements';\nvar styles = StyleSheet.create({\n  bigBlue: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  red: {\n    color: 'red'\n  }\n});\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var value = target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n      console.log(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, React.createElement(TextInput, {\n        style: style.bigBlue,\n        placeholder: \"Type here to translate!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Type here to translate!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/wamp64/www/practice/AwesomeProject/App.js"],"names":["React","Component","Input","styles","StyleSheet","create","bigBlue","color","fontWeight","fontSize","red","App","props","state","text","event","target","value","name","setState","console","log","style"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,SAASC,KAAT,QAAsB,uBAAtB;AACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGPC,IAAAA,QAAQ,EAAE;AAHH,GADsB;AAM/BC,EAAAA,GAAG,EAAE;AACHH,IAAAA,KAAK,EAAE;AADJ;AAN0B,CAAlB,CAAf;;IAUqBI,G;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFiB;AAGlB;;;;sCAEiBC,K,EAAO;AACvB,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AAEA,WAAKC,QAAL,qBACGD,IADH,EACUD,KADV;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB;AACD;;;6BAEQ;AAEP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAES,KAAK,CAAChB,OADf;AAEE,QAAA,WAAW,EAAC,yBAFd;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMI,oBAAC,SAAD;AAEA,QAAA,WAAW,EAAC,yBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADF;AAeD;;;;EAlC8BL,S;;SAAZU,G","sourcesContent":["import React, { Component } from 'react';\nimport { TextInput, StyleSheet, Text, View } from 'react-native';\n\nimport { Input } from 'react-native-elements';\nconst styles = StyleSheet.create({\n  bigBlue: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 30,\n  },\n  red: {\n    color: 'red',\n  },\n});\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: '' };\n  }\n  \n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    \n    return (\n      <View>\n        <TextInput\n          style={style.bigBlue}\n          placeholder=\"Type here to translate!\"\n         \n        />\n          <TextInput\n         \n          placeholder=\"Type here to translate!\"\n         \n        />  \n        \n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}