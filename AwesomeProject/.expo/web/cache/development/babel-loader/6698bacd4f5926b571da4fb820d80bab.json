{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\practice\\\\AwesomeProject\\\\App.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\nimport FormInput from \"../components/FormInput\";\nimport FormButton from \"../components/FormButton\";\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: '',\n      password: ''\n    };\n\n    _this.handleEmailChange = function (email) {\n      _this.setState({\n        email: email\n      });\n    };\n\n    _this.handlePasswordChange = function (password) {\n      _this.setState({\n        password: password\n      });\n    };\n\n    _this.onLogin = function _callee() {\n      var _this$state, email, password;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n\n              try {\n                if (email.length > 0 && password.length > 0) {\n                  _this.props.navigation.navigate('App');\n                }\n              } catch (error) {\n                alert(error);\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.goToSignup = function () {\n      return _this.props.navigation.navigate('Signup');\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n      return React.createElement(SafeAreaView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        }\n      }, React.createElement(FormInput, {\n        name: \"email\",\n        value: email,\n        placeholder: \"Enter email\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleEmailChange,\n        iconName: \"ios-mail\",\n        iconColor: \"#2C384A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }), React.createElement(FormInput, {\n        name: \"password\",\n        value: password,\n        placeholder: \"Enter password\",\n        secureTextEntry: true,\n        onChangeText: this.handlePasswordChange,\n        iconName: \"ios-lock\",\n        iconColor: \"#2C384A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      }, React.createElement(FormButton, {\n        buttonType: \"outline\",\n        onPress: this.handleOnLogin,\n        title: \"LOGIN\",\n        buttonColor: \"#039BE5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        }\n      })), React.createElement(Button, {\n        title: \"Don't have an account? Sign Up\",\n        onPress: this.goToSignup,\n        titleStyle: {\n          color: '#F57C00'\n        },\n        type: \"clear\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  buttonContainer: {\n    margin: 25\n  }\n});","map":{"version":3,"sources":["C:/wamp64/www/practice/AwesomeProject/App.js"],"names":["React","Button","FormInput","FormButton","Login","state","email","password","handleEmailChange","setState","handlePasswordChange","onLogin","length","props","navigation","navigate","error","alert","goToSignup","styles","container","buttonContainer","handleOnLogin","color","Component","StyleSheet","create","flex","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, SafeAreaView, View } from 'react-native'\nimport { Button } from 'react-native-elements'\nimport FormInput from '../components/FormInput'\nimport FormButton from '../components/FormButton'\n\nexport default class Login extends React.Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleEmailChange = email => {\n    this.setState({ email })\n  }\n\n  handlePasswordChange = password => {\n    this.setState({ password })\n  }\n\n  onLogin = async () => {\n    const { email, password } = this.state\n    try {\n      if (email.length > 0 && password.length > 0) {\n        this.props.navigation.navigate('App')\n      }\n    } catch (error) {\n      alert(error)\n    }\n  }\n\n  goToSignup = () => this.props.navigation.navigate('Signup')\n  render() {\n    const { email, password } = this.state\n\n    return (\n      <SafeAreaView style={styles.container}>\n        <FormInput\n          name=\"email\"\n          value={email}\n          placeholder=\"Enter email\"\n          autoCapitalize=\"none\"\n          onChangeText={this.handleEmailChange}\n          iconName=\"ios-mail\"\n          iconColor=\"#2C384A\"\n        />\n        <FormInput\n          name=\"password\"\n          value={password}\n          placeholder=\"Enter password\"\n          secureTextEntry\n          onChangeText={this.handlePasswordChange}\n          iconName=\"ios-lock\"\n          iconColor=\"#2C384A\"\n        />\n        <View style={styles.buttonContainer}>\n          <FormButton\n            buttonType=\"outline\"\n            onPress={this.handleOnLogin}\n            title=\"LOGIN\"\n            buttonColor=\"#039BE5\"\n          />\n        </View>\n        <Button\n          title=\"Don't have an account? Sign Up\"\n          onPress={this.goToSignup}\n          titleStyle={{\n            color: '#F57C00'\n          }}\n          type=\"clear\"\n        />\n      </SafeAreaView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  buttonContainer: {\n    margin: 25\n  }\n})"]},"metadata":{},"sourceType":"module"}